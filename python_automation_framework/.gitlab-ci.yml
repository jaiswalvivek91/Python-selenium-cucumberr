image: python:3.13

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == $BRANCH_NAME'
      when: always
    - if: '$BRANCH_NAME'
      when: always

variables:
  BRANCH_NAME: "VivekTest"
  ALLURE_VERSION: "2.27.0"
  DISPLAY: ":99"
  PYTHONUNBUFFERED: "1"
  ALLURE_RESULTS_DIR: "reports/allure-results"
  ALLURE_REPORT_DIR: "reports/allure-report"
  REPORTS_DIR: "reports"
  MAX_REPORTS: "10"

default:
  tags:
    - shell-runner

stages:
  - test
  - report
  - pages

cache:
  key: allure-report-cache
  paths:
    - reports/public/

.default_before_script: &allure_setup
  - python3 --version
  - apt-get update && apt-get install -y default-jre unzip wget curl xvfb chromium chromium-driver xclip
  - python3 -m venv .venv
  - source .venv/bin/activate
  - pip install --upgrade pip
  - pip install -r requirements.txt
  - export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
  - java -version
  - echo "Downloading Allure CLI v$ALLURE_VERSION..."
  - curl -o allure.zip -L "https://github.com/allure-framework/allure2/releases/download/$ALLURE_VERSION/allure-$ALLURE_VERSION.zip"
  - unzip -o allure.zip -d /opt/allure
  - export PATH=/opt/allure/allure-$ALLURE_VERSION/bin:$PATH
  - export ALLURE_VERSION="$ALLURE_VERSION"

before_script:
  - *allure_setup

test_execution:
  stage: test
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == $BRANCH_NAME'
      when: always
  script:
    - echo "Running test suite on branch:$BRANCH_NAME"
    - rm -rf $ALLURE_RESULTS_DIR $ALLURE_REPORT_DIR
    - mkdir -p $ALLURE_RESULTS_DIR
    - source .venv/bin/activate
    - xvfb-run -a python3 test_runner.py || export TEST_EXIT_CODE=$?
    - echo "Test execution completed"
    - echo "Contents of allure-results directory:"
    - ls -l $ALLURE_RESULTS_DIR
    - exit ${TEST_EXIT_CODE:-0}
  artifacts:
    when: always
    paths:
      - reports/allure-results
      - reports/allure-report
    expire_in: 2 days

generate_allure_report:
  stage: report
  before_script:
    - *allure_setup
  dependencies:
    - test_execution
  cache:
    key: allure-report-cache
    paths:
      - reports/public
  script:
    - latest_results_dir=$(ls -td reports/allure-results/allure_results_* | head -n 1)
    - echo "Using latest allure results folder:$latest_results_dir"
    - rm -rf $ALLURE_REPORT_DIR
    - /opt/allure/allure-$ALLURE_VERSION/bin/allure generate "$latest_results_dir" -o $ALLURE_REPORT_DIR --clean
    - mkdir -p reports/public
    # ðŸ”¹ Updated to use find-based counting (like Team B's approach)
    - count=$(find reports/public -maxdepth 1 -type d -name "run-*" | wc -l)
    - next=$((count+1))
    - cp -r $ALLURE_REPORT_DIR "reports/public/run-$next"
    - chmod +x report_index_generator.sh
    - ./report_index_generator.sh
  artifacts:
    paths:
      - $ALLURE_REPORT_DIR
      - reports/public
    expire_in: 10 days
    when: always

pages:
  stage: pages
  dependencies:
    - generate_allure_report
  script:
    - mv reports/public public
  artifacts:
    paths:
      - public
    when: always
